/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockUSDC, MockUSDCInterface } from "../../contracts/MockUSDC";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600981526020017f4d6f636b205553444300000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f5553444300000000000000000000000000000000000000000000000000000000815250816003908161008c91906106db565b50806004908161009c91906106db565b5050506100b96705d231948cbe554f60c01b61018460201b60201c565b6100d3674696105bae313a0060c01b61018460201b60201c565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061012e67505625a66241566d60c01b61018460201b60201c565b61014867c72d1cc01dd5f06d60c01b61018460201b60201c565b61017f3361015a61018760201b60201c565b600a610166919061091c565b620f42406101749190610967565b6101de60201b60201c565b610a9a565b50565b60006101a36733b02d0d44449e2f60c01b61018460201b60201c565b6101bd67d70adbd875eef2bc60c01b61018460201b60201c565b6101d7675a73f4b2eecf174660c01b61018460201b60201c565b6006905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102505760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161024791906109ea565b60405180910390fd5b6102626000838361026660201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102b85780600260008282546102ac9190610a05565b9250508190555061038b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610344578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161033b93929190610a48565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103d45780600260008282540392505081905550610421565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161047e9190610a7f565b60405180910390a3505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061050c57607f821691505b60208210810361051f5761051e6104c5565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261054a565b610591868361054a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006105d86105d36105ce846105a9565b6105b3565b6105a9565b9050919050565b6000819050919050565b6105f2836105bd565b6106066105fe826105df565b848454610557565b825550505050565b600090565b61061b61060e565b6106268184846105e9565b505050565b5b8181101561064a5761063f600082610613565b60018101905061062c565b5050565b601f82111561068f5761066081610525565b6106698461053a565b81016020851015610678578190505b61068c6106848561053a565b83018261062b565b50505b505050565b600082821c905092915050565b60006106b260001984600802610694565b1980831691505092915050565b60006106cb83836106a1565b9150826002028217905092915050565b6106e48261048b565b67ffffffffffffffff8111156106fd576106fc610496565b5b61070782546104f4565b61071282828561064e565b600060209050601f8311600181146107455760008415610733578287015190505b61073d85826106bf565b8655506107a5565b601f19841661075386610525565b60005b8281101561077b57848901518255600182019150602085019450602081019050610756565b868310156107985784890151610794601f8916826106a1565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156108335780860481111561080f5761080e6107ad565b5b600185161561081e5780820291505b808102905061082c856107dc565b94506107f3565b94509492505050565b60008261084c5760019050610908565b8161085a5760009050610908565b8160018114610870576002811461087a576108a9565b6001915050610908565b60ff84111561088c5761088b6107ad565b5b8360020a9150848211156108a3576108a26107ad565b5b50610908565b5060208310610133831016604e8410600b84101617156108de5782820a9050838111156108d9576108d86107ad565b5b610908565b6108eb84848460016107e9565b92509050818404811115610902576109016107ad565b5b81810290505b9392505050565b600060ff82169050919050565b6000610927826105a9565b91506109328361090f565b925061095f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461083c565b905092915050565b6000610972826105a9565b915061097d836105a9565b925082820261098b816105a9565b915082820484148315176109a2576109a16107ad565b5b5092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109d4826109a9565b9050919050565b6109e4816109c9565b82525050565b60006020820190506109ff60008301846109db565b92915050565b6000610a10826105a9565b9150610a1b836105a9565b9250828201905080821115610a3357610a326107ad565b5b92915050565b610a42816105a9565b82525050565b6000606082019050610a5d60008301866109db565b610a6a6020830185610a39565b610a776040830184610a39565b949350505050565b6000602082019050610a946000830184610a39565b92915050565b61119980610aa96000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461016857806370a08231146101845780638da5cb5b146101b457806395d89b41146101d2578063a9059cbb146101f0578063dd62ed3e14610220576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610250565b6040516100c39190610d5b565b60405180910390f35b6100e660048036038101906100e19190610e16565b6102e2565b6040516100f39190610e71565b60405180910390f35b610104610305565b6040516101119190610e9b565b60405180910390f35b610134600480360381019061012f9190610eb6565b61030f565b6040516101419190610e71565b60405180910390f35b61015261033e565b60405161015f9190610f25565b60405180910390f35b610182600480360381019061017d9190610e16565b610383565b005b61019e60048036038101906101999190610f40565b6104fd565b6040516101ab9190610e9b565b60405180910390f35b6101bc610545565b6040516101c99190610f7c565b60405180910390f35b6101da61056b565b6040516101e79190610d5b565b60405180910390f35b61020a60048036038101906102059190610e16565b6105fd565b6040516102179190610e71565b60405180910390f35b61023a60048036038101906102359190610f97565b610620565b6040516102479190610e9b565b60405180910390f35b60606003805461025f90611006565b80601f016020809104026020016040519081016040528092919081815260200182805461028b90611006565b80156102d85780601f106102ad576101008083540402835291602001916102d8565b820191906000526020600020905b8154815290600101906020018083116102bb57829003601f168201915b5050505050905090565b6000806102ed6106a7565b90506102fa8185856106af565b600191505092915050565b6000600254905090565b60008061031a6106a7565b90506103278582856106c1565b610332858585610756565b60019150509392505050565b60006103546733b02d0d44449e2f60c01b61084a565b61036867d70adbd875eef2bc60c01b61084a565b61037c675a73f4b2eecf174660c01b61084a565b6006905090565b610397677ba9739c9af738ee60c01b61084a565b6103ab67845e7a769a587e7360c01b61084a565b6103bf67c5774a9b8b26b0fd60c01b61084a565b6103d367100b0eb2a2fef98560c01b61084a565b6103e76711e3a6880b27779c60c01b61084a565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046e906110a9565b60405180910390fd5b61048b673ea945908bfc901a60c01b61084a565b61049f67cbd50d49d1250c1e60c01b61084a565b6104b36767865a163f18d8cd60c01b61084a565b6104c767aeafc8840bc9f76260c01b61084a565b6104db67c94ab78243f4f7e260c01b61084a565b6104ef67d431f2cbee30cd2760c01b61084a565b6104f9828261084d565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461057a90611006565b80601f01602080910402602001604051908101604052809291908181526020018280546105a690611006565b80156105f35780601f106105c8576101008083540402835291602001916105f3565b820191906000526020600020905b8154815290600101906020018083116105d657829003601f168201915b5050505050905090565b6000806106086106a7565b9050610615818585610756565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6106bc83838360016108cf565b505050565b60006106cd8484610620565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156107505781811015610740578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610737939291906110c9565b60405180910390fd5b61074f848484840360006108cf565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107c85760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107bf9190610f7c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361083a5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108319190610f7c565b60405180910390fd5b610845838383610aa6565b505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108bf5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108b69190610f7c565b60405180910390fd5b6108cb60008383610aa6565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109415760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109389190610f7c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109b35760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016109aa9190610f7c565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610aa0578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a979190610e9b565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610af8578060026000828254610aec919061112f565b92505081905550610bcb565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b84578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610b7b939291906110c9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c145780600260008282540392505081905550610c61565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610cbe9190610e9b565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d05578082015181840152602081019050610cea565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d2d82610ccb565b610d378185610cd6565b9350610d47818560208601610ce7565b610d5081610d11565b840191505092915050565b60006020820190508181036000830152610d758184610d22565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dad82610d82565b9050919050565b610dbd81610da2565b8114610dc857600080fd5b50565b600081359050610dda81610db4565b92915050565b6000819050919050565b610df381610de0565b8114610dfe57600080fd5b50565b600081359050610e1081610dea565b92915050565b60008060408385031215610e2d57610e2c610d7d565b5b6000610e3b85828601610dcb565b9250506020610e4c85828601610e01565b9150509250929050565b60008115159050919050565b610e6b81610e56565b82525050565b6000602082019050610e866000830184610e62565b92915050565b610e9581610de0565b82525050565b6000602082019050610eb06000830184610e8c565b92915050565b600080600060608486031215610ecf57610ece610d7d565b5b6000610edd86828701610dcb565b9350506020610eee86828701610dcb565b9250506040610eff86828701610e01565b9150509250925092565b600060ff82169050919050565b610f1f81610f09565b82525050565b6000602082019050610f3a6000830184610f16565b92915050565b600060208284031215610f5657610f55610d7d565b5b6000610f6484828501610dcb565b91505092915050565b610f7681610da2565b82525050565b6000602082019050610f916000830184610f6d565b92915050565b60008060408385031215610fae57610fad610d7d565b5b6000610fbc85828601610dcb565b9250506020610fcd85828601610dcb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061101e57607f821691505b60208210810361103157611030610fd7565b5b50919050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000611093602183610cd6565b915061109e82611037565b604082019050919050565b600060208201905081810360008301526110c281611086565b9050919050565b60006060820190506110de6000830186610f6d565b6110eb6020830185610e8c565b6110f86040830184610e8c565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113a82610de0565b915061114583610de0565b925082820190508082111561115d5761115c611100565b5b9291505056fea2646970667358221220761e96a9bb51e62ec2f6961ac706a02b06ed16bf150980fb07423c0d2aff985f64736f6c634300081c0033";

type MockUSDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUSDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUSDC__factory extends ContractFactory {
  constructor(...args: MockUSDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockUSDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockUSDC__factory {
    return super.connect(runner) as MockUSDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUSDCInterface {
    return new Interface(_abi) as MockUSDCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockUSDC {
    return new Contract(address, _abi, runner) as unknown as MockUSDC;
  }
}
